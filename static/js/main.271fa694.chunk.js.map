{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleInputChange","e","currentTarget","value","setState","handleAddContact","preventDefault","props","onSubmit","reset","alert","this","className","styles","form","type","placeholder","onChange","button","Component","connect","dispatch","Actions","filter","target","ContactListItem","handleDeleteContact","item","btn","onClick","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","contacts","items","filteredContacts","list","map","filteredContact","App","createReducer","actions","find","newContact","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.271fa694.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2uWkV\",\"button\":\"ContactForm_button__1xZFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__oBmUK\",\"item\":\"ContactListItem_item__i--zb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3w2lG\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import types from './types';\r\n\r\n// const addContact = ( { name, number } ) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name,\r\n//         number,\r\n//     }\r\n// });\r\n\r\nconst addContact = createAction('phonebook/add', ({ name, number }) => ({\r\n        payload: {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n    },\r\n}));\r\n\r\n// const deleteContact = (contactID) => (\r\n//     {\r\n//         type: types.DELETE,\r\n//         payload: contactID,\r\n//     }\r\n// );\r\n\r\nconst deleteContact = createAction('phonebook/delete');\r\n\r\n// const changeFilter = (value) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// });\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../redux/actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleAddContact = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.name === '' || this.state.number === '') {\r\n            alert('Please enter data');\r\n            return;\r\n        }\r\n        this.props.onSubmit({ ...this.state });\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleAddContact} className={styles.form}>\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input\r\n                        name='name'\r\n                        value={name}\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <p>Number</p>\r\n                    <input\r\n                        name='number'\r\n                        value={number}\r\n                        type='tel'\r\n                        placeholder='Phone number'\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </label>\r\n                <button type='submit' className={styles.button}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: ( name, number ) => dispatch(Actions.addContact(name, number)),\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../redux/actions';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label>\r\n        Find contacts by name\r\n         <br />\r\n        <input type='text' value={value} onChange={onChange} placeholder='Search contacts' />\r\n    </label>);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ value: state.filter });\r\n\r\nconst mapDispatchToProps = dispatch => ({ onChange: (e) => dispatch(Actions.changeFilter(e.target.value)) });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, handleDeleteContact }) => (\r\n  <li key={id} className={styles.item}>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button className={styles.btn} onClick={() => handleDeleteContact(id)}>Delete</button>\r\n  </li>);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  handleDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../redux/actions';\r\nimport styles from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({filteredContacts, handleDeleteContact}) => (\r\n    <ul className={styles.list}>\r\n        {\r\n            filteredContacts.map(filteredContact => (\r\n                <ContactListItem\r\n                    key={filteredContact.id}\r\n                    id={filteredContact.id}\r\n                    name={filteredContact.name}\r\n                    number={filteredContact.number}\r\n                    handleDeleteContact={handleDeleteContact}\r\n                />))\r\n        }\r\n    </ul>);\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string\r\n        })\r\n    ).isRequired,\r\n    handleDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  filteredContacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleDeleteContact: (id) => dispatch(Actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nexport default function App() {\r\n\r\n  // componentDidMount() {\r\n  //   const contacts = localStorage.getItem('contacts');\r\n  //   const parcedContacts = JSON.parse(contacts);\r\n  //   if (parcedContacts) {\r\n  //     this.setState({ contacts: parcedContacts });\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.state.contacts !== prevState.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './types';\r\nimport actions from './actions';\r\n\r\nconst INITIAL_STATE = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// const items = (state = INITIAL_STATE, { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             const isInList = state.find(\r\n//                 newContact => newContact.name.toLowerCase() === payload.name.toLowerCase()\r\n//             );\r\n//             if (isInList) {\r\n//                 alert(`Contact ${payload.name} is already exist`);\r\n//                 return state;\r\n//             }\r\n//             return [...state, payload];\r\n        \r\n//         case types.DELETE:\r\n//             return state.filter(({ id }) => id !== payload);\r\n            \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\nconst items = createReducer(INITIAL_STATE, {\r\n    [actions.addContact]: (state, { payload }) => {\r\n        const isInList = state.find(\r\n                newContact => newContact.name.toLowerCase() === payload.name.toLowerCase()\r\n            );\r\n            if (isInList) {\r\n                alert(`Contact ${payload.name} is already exist`);\r\n                return state;\r\n            }\r\n            return [...state, payload];\r\n    },\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;\r\n            \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\nconst filter = createReducer('', { [actions.changeFilter]: (_, { payload }) => payload });\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport reducer from './reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: reducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}